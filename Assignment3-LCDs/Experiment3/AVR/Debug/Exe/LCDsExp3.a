;/*******************************************************
;Project : LCDsExp3
;Version : 1.00
;Date    : 1/6/2021
;Author  : Alireza Majari
;Company : P48
;Comments:
;This is Assignment#3 Experiment#3 of Microprocessor Lab.
;kharazmi University of Tehran
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 12.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;#include <delay.h>
;
;unsigned int positiveEdge;
;unsigned int negativeEdge;
;unsigned int end;
;char frequency[16];
;unsigned int period;
;long freq;
;
;void main(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0022     lcd_init(20);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0023     lcd_puts("initiating...");
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0024     DDRC =0xFF;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0025     PORTC = 0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0026 
; 0000 0027     while(1)
;PCODE: $00000017 VOL: 0
; 0000 0028     {
; 0000 0029         TCCR1A = 0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002A         TCNT1=0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002B         TIFR = (1<<ICF1);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002C         TCCR1B = 0x41;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002D 
; 0000 002E         while ((TIFR&(1<<ICF1)) == 0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002F 
; 0000 0030         positiveEdge = (256 * ICR1H) + ICR1L;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0031         TIFR = (1<<ICF1);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0032         TCCR1B = 0x01;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0033 
; 0000 0034         while ((TIFR&(1<<ICF1)) == 0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0035 
; 0000 0036         negativeEdge = (256 * ICR1H) + ICR1L;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0037         TIFR = (1<<ICF1);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0038         TCCR1B = 0x41;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0039 
; 0000 003A         while ((TIFR&(1<<ICF1)) == 0);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003B 
; 0000 003C         end = (256 * ICR1H) + ICR1L;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003D         TIFR = (1<<ICF1);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 003E         TCCR1B = 0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 003F 
; 0000 0040 		if(positiveEdge < end)
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0041 		{
; 0000 0042 			period = end - positiveEdge;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0043 
; 0000 0044 			freq= 8000000UL/period;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0045             sprintf(frequency,"Frequency= %d Hz", (int)freq);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0046 
; 0000 0047             lcd_clear();
;PCODE: $0000006D VOL: 0
; 0000 0048 			lcd_puts(frequency);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0049 		}
; 0000 004A 
; 0000 004B         delay_ms(150);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 004C 	}
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 004D }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0

	.DSEG
_0x3:
	.BYTE 0xE
