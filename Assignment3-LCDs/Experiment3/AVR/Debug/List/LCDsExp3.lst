
AVRASM ver. 2.1.30  F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm Wed Jan 06 18:11:07 2021

F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1088): warning: Register r4 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1089): warning: Register r5 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1090): warning: Register r6 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1091): warning: Register r7 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1092): warning: Register r8 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1093): warning: Register r9 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1094): warning: Register r10 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1095): warning: Register r11 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1096): warning: Register r13 already defined by the .DEF directive
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1097): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 12.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _positiveEdge=R4
                 	.DEF _positiveEdge_msb=R5
                 	.DEF _negativeEdge=R6
                 	.DEF _negativeEdge_msb=R7
                 	.DEF _end=R8
                 	.DEF _end_msb=R9
                 	.DEF _period=R10
                 	.DEF _period_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6e69
000034 7469
000035 6169
000036 6974      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x74,0x69
000037 676e
000038 2e2e
000039 002e
00003a 7246      	.DB  0x6E,0x67,0x2E,0x2E,0x2E,0x0,0x46,0x72
00003b 7165
00003c 6575
00003d 636e
00003e 3d79      	.DB  0x65,0x71,0x75,0x65,0x6E,0x63,0x79,0x3D
00003f 2520
000040 2064
000041 7a48
F:\Fucking University Stuff\Micro Lab\MicroprocessorLab\Assignment3-LCDs\Experiment3\AVR\Debug\List\LCDsExp3.asm(1138): warning: .cseg .db misalignment - padding zero byte
000042 0000      	.DB  0x20,0x25,0x64,0x20,0x48,0x7A,0x0
                 _0x2000003:
000043 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000044 000e      	.DW  0x0E
000045 0160      	.DW  _0x3
000046 0066      	.DW  _0x0*2
                 
000047 0002      	.DW  0x02
000048 0182      	.DW  __base_y_G100
000049 0086      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00004a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004b 94f8      	CLI
00004c 27ee      	CLR  R30
00004d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004e e0f1      	LDI  R31,1
00004f bffb      	OUT  GICR,R31
000050 bfeb      	OUT  GICR,R30
000051 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000052 e08d      	LDI  R24,(14-2)+1
000053 e0a2      	LDI  R26,2
000054 27bb      	CLR  R27
                 __CLEAR_REG:
000055 93ed      	ST   X+,R30
000056 958a      	DEC  R24
000057 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000058 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000059 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005b 93ed      	ST   X+,R30
00005c 9701      	SBIW R24,1
00005d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005e e8e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000060 9185      	LPM  R24,Z+
000061 9195      	LPM  R25,Z+
000062 9700      	SBIW R24,0
000063 f061      	BREQ __GLOBAL_INI_END
000064 91a5      	LPM  R26,Z+
000065 91b5      	LPM  R27,Z+
000066 9005      	LPM  R0,Z+
000067 9015      	LPM  R1,Z+
000068 01bf      	MOVW R22,R30
000069 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006a 9005      	LPM  R0,Z+
00006b 920d      	ST   X+,R0
00006c 9701      	SBIW R24,1
00006d f7e1      	BRNE __GLOBAL_INI_LOOP
00006e 01fb      	MOVW R30,R22
00006f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000070 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000071 bfed      	OUT  SPL,R30
000072 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000073 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000074 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000075 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000076 940c 0078 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project : LCDsExp3
                 ;Version : 1.00
                 ;Date    : 1/6/2021
                 ;Author  : Alireza Majari
                 ;Company : P48
                 ;Comments:
                 ;This is Assignment#3 Experiment#3 of Microprocessor Lab.
                 ;kharazmi University of Tehran
                 ;
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 12.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;unsigned int positiveEdge;
                 ;unsigned int negativeEdge;
                 ;unsigned int end;
                 ;char frequency[16];
                 ;unsigned int period;
                 ;long freq;
                 ;
                 ;void main(void)
                 ; 0000 0021 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0022     lcd_init(20);
000078 e1a4      	LDI  R26,LOW(20)
000079 d0c5      	RCALL _lcd_init
                 ; 0000 0023     lcd_puts("initiating...");
                +
00007a e6a0     +LDI R26 , LOW ( _0x3 + ( 0 ) )
00007b e0b1     +LDI R27 , HIGH ( _0x3 + ( 0 ) )
                 	__POINTW2MN _0x3,0
00007c d0b1      	RCALL _lcd_puts
                 ; 0000 0024     DDRC =0xFF;
00007d efef      	LDI  R30,LOW(255)
00007e bbe4      	OUT  0x14,R30
                 ; 0000 0025     PORTC = 0x00;
00007f e0e0      	LDI  R30,LOW(0)
000080 bbe5      	OUT  0x15,R30
                 ; 0000 0026 
                 ; 0000 0027     while(1)
                 _0x4:
                 ; 0000 0028     {
                 ; 0000 0029         TCCR1A = 0;
000081 e0e0      	LDI  R30,LOW(0)
000082 bdef      	OUT  0x2F,R30
                 ; 0000 002A         TCNT1=0;
000083 e0e0      	LDI  R30,LOW(0)
000084 e0f0      	LDI  R31,HIGH(0)
000085 bdfd      	OUT  0x2C+1,R31
000086 bdec      	OUT  0x2C,R30
                 ; 0000 002B         TIFR = (1<<ICF1);
000087 e2e0      	LDI  R30,LOW(32)
000088 bfe8      	OUT  0x38,R30
                 ; 0000 002C         TCCR1B = 0x41;
000089 e4e1      	LDI  R30,LOW(65)
00008a bdee      	OUT  0x2E,R30
                 ; 0000 002D 
                 ; 0000 002E         while ((TIFR&(1<<ICF1)) == 0);
                 _0x7:
00008b b7e8      	IN   R30,0x38
00008c ffe5      	SBRS R30,5
00008d cffd      	RJMP _0x7
                 ; 0000 002F 
                 ; 0000 0030         positiveEdge = (256 * ICR1H) + ICR1L;
00008e 940e 032f 	CALL SUBOPT_0x0
000090 012f      	MOVW R4,R30
                 ; 0000 0031         TIFR = (1<<ICF1);
000091 e2e0      	LDI  R30,LOW(32)
000092 bfe8      	OUT  0x38,R30
                 ; 0000 0032         TCCR1B = 0x01;
000093 e0e1      	LDI  R30,LOW(1)
000094 bdee      	OUT  0x2E,R30
                 ; 0000 0033 
                 ; 0000 0034         while ((TIFR&(1<<ICF1)) == 0);
                 _0xA:
000095 b7e8      	IN   R30,0x38
000096 ffe5      	SBRS R30,5
000097 cffd      	RJMP _0xA
                 ; 0000 0035 
                 ; 0000 0036         negativeEdge = (256 * ICR1H) + ICR1L;
000098 940e 032f 	CALL SUBOPT_0x0
00009a 013f      	MOVW R6,R30
                 ; 0000 0037         TIFR = (1<<ICF1);
00009b e2e0      	LDI  R30,LOW(32)
00009c bfe8      	OUT  0x38,R30
                 ; 0000 0038         TCCR1B = 0x41;
00009d e4e1      	LDI  R30,LOW(65)
00009e bdee      	OUT  0x2E,R30
                 ; 0000 0039 
                 ; 0000 003A         while ((TIFR&(1<<ICF1)) == 0);
                 _0xD:
00009f b7e8      	IN   R30,0x38
0000a0 ffe5      	SBRS R30,5
0000a1 cffd      	RJMP _0xD
                 ; 0000 003B 
                 ; 0000 003C         end = (256 * ICR1H) + ICR1L;
0000a2 940e 032f 	CALL SUBOPT_0x0
0000a4 014f      	MOVW R8,R30
                 ; 0000 003D         TIFR = (1<<ICF1);
0000a5 e2e0      	LDI  R30,LOW(32)
0000a6 bfe8      	OUT  0x38,R30
                 ; 0000 003E         TCCR1B = 0;
0000a7 e0e0      	LDI  R30,LOW(0)
0000a8 bdee      	OUT  0x2E,R30
                 ; 0000 003F 
                 ; 0000 0040 		if(positiveEdge < end)
                +
0000a9 1448     +CP R4 , R8
0000aa 0459     +CPC R5 , R9
                 	__CPWRR 4,5,8,9
0000ab f560      	BRSH _0x10
                 ; 0000 0041 		{
                 ; 0000 0042 			period = end - positiveEdge;
0000ac 01f4      	MOVW R30,R8
0000ad 19e4      	SUB  R30,R4
0000ae 09f5      	SBC  R31,R5
0000af 015f      	MOVW R10,R30
                 ; 0000 0043 
                 ; 0000 0044 			freq= 8000000UL/period;
0000b0 2766      	CLR  R22
0000b1 2777      	CLR  R23
                +
0000b2 e0a0     +LDI R26 , LOW ( 0x7A1200 )
0000b3 e1b2     +LDI R27 , HIGH ( 0x7A1200 )
0000b4 e78a     +LDI R24 , BYTE3 ( 0x7A1200 )
0000b5 e090     +LDI R25 , BYTE4 ( 0x7A1200 )
                 	__GETD2N 0x7A1200
0000b6 940e 0389 	CALL __DIVD21U
0000b8 93e0 017e 	STS  _freq,R30
0000ba 93f0 017f 	STS  _freq+1,R31
0000bc 9360 0180 	STS  _freq+2,R22
0000be 9370 0181 	STS  _freq+3,R23
                 ; 0000 0045             sprintf(frequency,"Frequency= %d Hz", (int)freq);
0000c0 e6ee      	LDI  R30,LOW(_frequency)
0000c1 e0f1      	LDI  R31,HIGH(_frequency)
0000c2 93fa      	ST   -Y,R31
0000c3 93ea      	ST   -Y,R30
                +
0000c4 e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
0000c5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
0000c6 93fa      	ST   -Y,R31
0000c7 93ea      	ST   -Y,R30
0000c8 91e0 017e 	LDS  R30,_freq
0000ca 91f0 017f 	LDS  R31,_freq+1
0000cc 940e 0384 	CALL __CWD1
0000ce 940e 03b6 	CALL __PUTPARD1
0000d0 e084      	LDI  R24,4
0000d1 940e 02e2 	CALL _sprintf
0000d3 9628      	ADIW R28,8
                 ; 0000 0046 
                 ; 0000 0047             lcd_clear();
0000d4 d036      	RCALL _lcd_clear
                 ; 0000 0048 			lcd_puts(frequency);
0000d5 e6ae      	LDI  R26,LOW(_frequency)
0000d6 e0b1      	LDI  R27,HIGH(_frequency)
0000d7 d056      	RCALL _lcd_puts
                 ; 0000 0049 		}
                 ; 0000 004A 
                 ; 0000 004B         delay_ms(150);
                 _0x10:
0000d8 e9a6      	LDI  R26,LOW(150)
0000d9 e0b0      	LDI  R27,0
0000da 940e 0372 	CALL _delay_ms
                 ; 0000 004C 	}
0000dc cfa4      	RJMP _0x4
                 ; 0000 004D }
                 _0x11:
0000dd cfff      	RJMP _0x11
                 ; .FEND
                 
                 	.DSEG
                 _0x3:
000160           	.BYTE 0xE
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000de 93aa      	ST   -Y,R26
0000df b3e5      	IN   R30,0x15
0000e0 70ef      	ANDI R30,LOW(0xF)
0000e1 2fae      	MOV  R26,R30
0000e2 81e8      	LD   R30,Y
0000e3 7fe0      	ANDI R30,LOW(0xF0)
0000e4 2bea      	OR   R30,R26
0000e5 bbe5      	OUT  0x15,R30
                +
0000e6 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
0000e7 958a     +DEC R24
0000e8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0000e9 9aaa      	SBI  0x15,2
                +
0000ea e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
0000eb 958a     +DEC R24
0000ec f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0000ed 98aa      	CBI  0x15,2
                +
0000ee e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
0000ef 958a     +DEC R24
0000f0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0000f1 c07a      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000f2 93aa      	ST   -Y,R26
0000f3 81a8      	LD   R26,Y
0000f4 dfe9      	RCALL __lcd_write_nibble_G100
0000f5 81e8          ld    r30,y
0000f6 95e2          swap  r30
0000f7 83e8          st    y,r30
0000f8 81a8      	LD   R26,Y
0000f9 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000fa ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
0000fb 958a     +DEC R24
0000fc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
0000fd c06e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000fe 93aa      	ST   -Y,R26
0000ff 81e8      	LD   R30,Y
000100 e0f0      	LDI  R31,0
000101 57ee      	SUBI R30,LOW(-__base_y_G100)
000102 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000103 81e0      	LD   R30,Z
000104 81a9      	LDD  R26,Y+1
000105 0fae      	ADD  R26,R30
000106 dfeb      	RCALL __lcd_write_data
000107 80d9      	LDD  R13,Y+1
000108 80c8      	LDD  R12,Y+0
000109 9622      	ADIW R28,2
00010a 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00010b e0a2      	LDI  R26,LOW(2)
00010c 940e 0338 	CALL SUBOPT_0x1
00010e e0ac      	LDI  R26,LOW(12)
00010f dfe2      	RCALL __lcd_write_data
000110 e0a1      	LDI  R26,LOW(1)
000111 940e 0338 	CALL SUBOPT_0x1
000113 e0e0      	LDI  R30,LOW(0)
000114 2ece      	MOV  R12,R30
000115 2ede      	MOV  R13,R30
000116 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000117 93aa      	ST   -Y,R26
000118 81a8      	LD   R26,Y
000119 30aa      	CPI  R26,LOW(0xA)
00011a f021      	BREQ _0x2000005
00011b 91e0 0186 	LDS  R30,__lcd_maxx
00011d 16de      	CP   R13,R30
00011e f048      	BRLO _0x2000004
                 _0x2000005:
00011f e0e0      	LDI  R30,LOW(0)
000120 93ea      	ST   -Y,R30
000121 94c3      	INC  R12
000122 2dac      	MOV  R26,R12
000123 dfda      	RCALL _lcd_gotoxy
000124 81a8      	LD   R26,Y
000125 30aa      	CPI  R26,LOW(0xA)
000126 f409      	BRNE _0x2000007
000127 c044      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000128 94d3      	INC  R13
000129 9aa8      	SBI  0x15,0
00012a 81a8      	LD   R26,Y
00012b dfc6      	RCALL __lcd_write_data
00012c 98a8      	CBI  0x15,0
00012d c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00012e 93ba      	ST   -Y,R27
00012f 93aa      	ST   -Y,R26
000130 931a      	ST   -Y,R17
                 _0x2000008:
000131 81a9      	LDD  R26,Y+1
000132 81ba      	LDD  R27,Y+1+1
000133 91ed      	LD   R30,X+
000134 83a9      	STD  Y+1,R26
000135 83ba      	STD  Y+1+1,R27
000136 2f1e      	MOV  R17,R30
000137 30e0      	CPI  R30,0
000138 f019      	BREQ _0x200000A
000139 2fa1      	MOV  R26,R17
00013a dfdc      	RCALL _lcd_putchar
00013b cff5      	RJMP _0x2000008
                 _0x200000A:
00013c 8118      	LDD  R17,Y+0
00013d 9623      	ADIW R28,3
00013e 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00013f 93aa      	ST   -Y,R26
000140 b3e4      	IN   R30,0x14
000141 6fe0      	ORI  R30,LOW(0xF0)
000142 bbe4      	OUT  0x14,R30
000143 9aa2      	SBI  0x14,2
000144 9aa0      	SBI  0x14,0
000145 9aa1      	SBI  0x14,1
000146 98aa      	CBI  0x15,2
000147 98a8      	CBI  0x15,0
000148 98a9      	CBI  0x15,1
000149 81e8      	LD   R30,Y
00014a 93e0 0186 	STS  __lcd_maxx,R30
00014c 58e0      	SUBI R30,-LOW(128)
                +
00014d 93e0 0184+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00014f 81e8      	LD   R30,Y
000150 54e0      	SUBI R30,-LOW(192)
                +
000151 93e0 0185+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000153 e1a4      	LDI  R26,LOW(20)
000154 e0b0      	LDI  R27,0
000155 940e 0372 	CALL _delay_ms
000157 940e 033e 	CALL SUBOPT_0x2
000159 940e 033e 	CALL SUBOPT_0x2
00015b 940e 033e 	CALL SUBOPT_0x2
00015d e2a0      	LDI  R26,LOW(32)
00015e df7f      	RCALL __lcd_write_nibble_G100
                +
00015f e28c     +LDI R24 , LOW ( 300 )
000160 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
000161 9701     +SBIW R24 , 1
000162 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
000163 e2a8      	LDI  R26,LOW(40)
000164 df8d      	RCALL __lcd_write_data
000165 e0a4      	LDI  R26,LOW(4)
000166 df8b      	RCALL __lcd_write_data
000167 e8a5      	LDI  R26,LOW(133)
000168 df89      	RCALL __lcd_write_data
000169 e0a6      	LDI  R26,LOW(6)
00016a df87      	RCALL __lcd_write_data
00016b df9f      	RCALL _lcd_clear
                 _0x2080002:
00016c 9621      	ADIW R28,1
00016d 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00016e 93ba      	ST   -Y,R27
00016f 93aa      	ST   -Y,R26
000170 931a      	ST   -Y,R17
000171 930a      	ST   -Y,R16
000172 81aa      	LDD  R26,Y+2
000173 81bb      	LDD  R27,Y+2+1
000174 9612      	ADIW R26,2
000175 940e 03ae 	CALL __GETW1P
000177 9730      	SBIW R30,0
000178 f159      	BREQ _0x2020010
000179 81aa      	LDD  R26,Y+2
00017a 81bb      	LDD  R27,Y+2+1
00017b 9614      	ADIW R26,4
00017c 940e 03ae 	CALL __GETW1P
00017e 018f      	MOVW R16,R30
00017f 9730      	SBIW R30,0
000180 f061      	BREQ _0x2020012
                +
000181 3002     +CPI R16 , LOW ( 2 )
000182 e0e0     +LDI R30 , HIGH ( 2 )
000183 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000184 f098      	BRLO _0x2020013
000185 01f8      	MOVW R30,R16
000186 9731      	SBIW R30,1
000187 018f      	MOVW R16,R30
                +
000188 81aa     +LDD R26 , Y + 2
000189 81bb     +LDD R27 , Y + 2 + 1
00018a 9614     +ADIW R26 , 4
00018b 93ed     +ST X + , R30
00018c 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00018d 81aa      	LDD  R26,Y+2
00018e 81bb      	LDD  R27,Y+2+1
00018f 9612      	ADIW R26,2
000190 91ed      	LD   R30,X+
000191 91fd      	LD   R31,X+
000192 9631      	ADIW R30,1
000193 93fe      	ST   -X,R31
000194 93ee      	ST   -X,R30
000195 9731      	SBIW R30,1
000196 81ac      	LDD  R26,Y+4
000197 83a0      	STD  Z+0,R26
                 _0x2020013:
000198 81aa      	LDD  R26,Y+2
000199 81bb      	LDD  R27,Y+2+1
00019a 940e 03ae 	CALL __GETW1P
00019c 23ff      	TST  R31
00019d f02a      	BRMI _0x2020014
00019e 91ed      	LD   R30,X+
00019f 91fd      	LD   R31,X+
0001a0 9631      	ADIW R30,1
0001a1 93fe      	ST   -X,R31
0001a2 93ee      	ST   -X,R30
                 _0x2020014:
0001a3 c006      	RJMP _0x2020015
                 _0x2020010:
0001a4 81aa      	LDD  R26,Y+2
0001a5 81bb      	LDD  R27,Y+2+1
0001a6 efef      	LDI  R30,LOW(65535)
0001a7 efff      	LDI  R31,HIGH(65535)
0001a8 93ed      	ST   X+,R30
0001a9 93fc      	ST   X,R31
                 _0x2020015:
0001aa 8119      	LDD  R17,Y+1
0001ab 8108      	LDD  R16,Y+0
0001ac 9625      	ADIW R28,5
0001ad 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001ae 93ba      	ST   -Y,R27
0001af 93aa      	ST   -Y,R26
0001b0 9726      	SBIW R28,6
0001b1 940e 03bb 	CALL __SAVELOCR6
0001b3 e010      	LDI  R17,0
0001b4 85ac      	LDD  R26,Y+12
0001b5 85bd      	LDD  R27,Y+12+1
0001b6 e0e0      	LDI  R30,LOW(0)
0001b7 e0f0      	LDI  R31,HIGH(0)
0001b8 93ed      	ST   X+,R30
0001b9 93fc      	ST   X,R31
                 _0x2020016:
0001ba 89ea      	LDD  R30,Y+18
0001bb 89fb      	LDD  R31,Y+18+1
0001bc 9631      	ADIW R30,1
0001bd 8bea      	STD  Y+18,R30
0001be 8bfb      	STD  Y+18+1,R31
0001bf 9731      	SBIW R30,1
0001c0 91e4      	LPM  R30,Z
0001c1 2f2e      	MOV  R18,R30
0001c2 30e0      	CPI  R30,0
0001c3 f409      	BRNE PC+2
0001c4 c115      	RJMP _0x2020018
0001c5 2fe1      	MOV  R30,R17
0001c6 30e0      	CPI  R30,0
0001c7 f439      	BRNE _0x202001C
0001c8 3225      	CPI  R18,37
0001c9 f411      	BRNE _0x202001D
0001ca e011      	LDI  R17,LOW(1)
0001cb c002      	RJMP _0x202001E
                 _0x202001D:
0001cc 940e 0346 	CALL SUBOPT_0x3
                 _0x202001E:
0001ce c10a      	RJMP _0x202001B
                 _0x202001C:
0001cf 30e1      	CPI  R30,LOW(0x1)
0001d0 f4a9      	BRNE _0x202001F
0001d1 3225      	CPI  R18,37
0001d2 f419      	BRNE _0x2020020
0001d3 940e 0346 	CALL SUBOPT_0x3
0001d5 c102      	RJMP _0x20200CC
                 _0x2020020:
0001d6 e012      	LDI  R17,LOW(2)
0001d7 e040      	LDI  R20,LOW(0)
0001d8 e000      	LDI  R16,LOW(0)
0001d9 322d      	CPI  R18,45
0001da f411      	BRNE _0x2020021
0001db e001      	LDI  R16,LOW(1)
0001dc c0fc      	RJMP _0x202001B
                 _0x2020021:
0001dd 322b      	CPI  R18,43
0001de f411      	BRNE _0x2020022
0001df e24b      	LDI  R20,LOW(43)
0001e0 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001e1 3220      	CPI  R18,32
0001e2 f411      	BRNE _0x2020023
0001e3 e240      	LDI  R20,LOW(32)
0001e4 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001e5 c002      	RJMP _0x2020024
                 _0x202001F:
0001e6 30e2      	CPI  R30,LOW(0x2)
0001e7 f439      	BRNE _0x2020025
                 _0x2020024:
0001e8 e050      	LDI  R21,LOW(0)
0001e9 e013      	LDI  R17,LOW(3)
0001ea 3320      	CPI  R18,48
0001eb f411      	BRNE _0x2020026
0001ec 6800      	ORI  R16,LOW(128)
0001ed c0eb      	RJMP _0x202001B
                 _0x2020026:
0001ee c003      	RJMP _0x2020027
                 _0x2020025:
0001ef 30e3      	CPI  R30,LOW(0x3)
0001f0 f009      	BREQ PC+2
0001f1 c0e7      	RJMP _0x202001B
                 _0x2020027:
0001f2 3320      	CPI  R18,48
0001f3 f010      	BRLO _0x202002A
0001f4 332a      	CPI  R18,58
0001f5 f008      	BRLO _0x202002B
                 _0x202002A:
0001f6 c007      	RJMP _0x2020029
                 _0x202002B:
0001f7 e0aa      	LDI  R26,LOW(10)
0001f8 9f5a      	MUL  R21,R26
0001f9 2d50      	MOV  R21,R0
0001fa 2fe2      	MOV  R30,R18
0001fb 53e0      	SUBI R30,LOW(48)
0001fc 0f5e      	ADD  R21,R30
0001fd c0db      	RJMP _0x202001B
                 _0x2020029:
0001fe 2fe2      	MOV  R30,R18
0001ff 36e3      	CPI  R30,LOW(0x63)
000200 f449      	BRNE _0x202002F
000201 940e 034d 	CALL SUBOPT_0x4
000203 89e8      	LDD  R30,Y+16
000204 89f9      	LDD  R31,Y+16+1
000205 81a4      	LDD  R26,Z+4
000206 93aa      	ST   -Y,R26
000207 940e 0353 	CALL SUBOPT_0x5
000209 c0ce      	RJMP _0x2020030
                 _0x202002F:
00020a 37e3      	CPI  R30,LOW(0x73)
00020b f441      	BRNE _0x2020032
00020c 940e 034d 	CALL SUBOPT_0x4
00020e 940e 0359 	CALL SUBOPT_0x6
000210 940e 0316 	CALL _strlen
000212 2f1e      	MOV  R17,R30
000213 c00a      	RJMP _0x2020033
                 _0x2020032:
000214 37e0      	CPI  R30,LOW(0x70)
000215 f461      	BRNE _0x2020035
000216 940e 034d 	CALL SUBOPT_0x4
000218 940e 0359 	CALL SUBOPT_0x6
00021a 940e 0322 	CALL _strlenf
00021c 2f1e      	MOV  R17,R30
00021d 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00021e 6002      	ORI  R16,LOW(2)
00021f 770f      	ANDI R16,LOW(127)
000220 e030      	LDI  R19,LOW(0)
000221 c034      	RJMP _0x2020036
                 _0x2020035:
000222 36e4      	CPI  R30,LOW(0x64)
000223 f011      	BREQ _0x2020039
000224 36e9      	CPI  R30,LOW(0x69)
000225 f411      	BRNE _0x202003A
                 _0x2020039:
000226 6004      	ORI  R16,LOW(4)
000227 c002      	RJMP _0x202003B
                 _0x202003A:
000228 37e5      	CPI  R30,LOW(0x75)
000229 f431      	BRNE _0x202003C
                 _0x202003B:
00022a e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00022b e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00022c 83ee      	STD  Y+6,R30
00022d 83ff      	STD  Y+6+1,R31
00022e e015      	LDI  R17,LOW(5)
00022f c00c      	RJMP _0x202003D
                 _0x202003C:
000230 35e8      	CPI  R30,LOW(0x58)
000231 f411      	BRNE _0x202003F
000232 6008      	ORI  R16,LOW(8)
000233 c003      	RJMP _0x2020040
                 _0x202003F:
000234 37e8      	CPI  R30,LOW(0x78)
000235 f009      	BREQ PC+2
000236 c0a1      	RJMP _0x2020071
                 _0x2020040:
000237 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000238 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000239 83ee      	STD  Y+6,R30
00023a 83ff      	STD  Y+6+1,R31
00023b e014      	LDI  R17,LOW(4)
                 _0x202003D:
00023c ff02      	SBRS R16,2
00023d c014      	RJMP _0x2020042
00023e 940e 034d 	CALL SUBOPT_0x4
000240 940e 0363 	CALL SUBOPT_0x7
000242 85ab      	LDD  R26,Y+11
000243 23aa      	TST  R26
000244 f43a      	BRPL _0x2020043
000245 85ea      	LDD  R30,Y+10
000246 85fb      	LDD  R31,Y+10+1
000247 940e 0380 	CALL __ANEGW1
000249 87ea      	STD  Y+10,R30
00024a 87fb      	STD  Y+10+1,R31
00024b e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00024c 3040      	CPI  R20,0
00024d f011      	BREQ _0x2020044
00024e 5f1f      	SUBI R17,-LOW(1)
00024f c001      	RJMP _0x2020045
                 _0x2020044:
000250 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000251 c004      	RJMP _0x2020046
                 _0x2020042:
000252 940e 034d 	CALL SUBOPT_0x4
000254 940e 0363 	CALL SUBOPT_0x7
                 _0x2020046:
                 _0x2020036:
000256 fd00      	SBRC R16,0
000257 c011      	RJMP _0x2020047
                 _0x2020048:
000258 1715      	CP   R17,R21
000259 f478      	BRSH _0x202004A
00025a ff07      	SBRS R16,7
00025b c008      	RJMP _0x202004B
00025c ff02      	SBRS R16,2
00025d c004      	RJMP _0x202004C
00025e 7f0b      	ANDI R16,LOW(251)
00025f 2f24      	MOV  R18,R20
000260 5011      	SUBI R17,LOW(1)
000261 c001      	RJMP _0x202004D
                 _0x202004C:
000262 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000263 c001      	RJMP _0x202004E
                 _0x202004B:
000264 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000265 940e 0346 	CALL SUBOPT_0x3
000267 5051      	SUBI R21,LOW(1)
000268 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000269 2f31      	MOV  R19,R17
00026a ff01      	SBRS R16,1
00026b c017      	RJMP _0x202004F
                 _0x2020050:
00026c 3030      	CPI  R19,0
00026d f0a1      	BREQ _0x2020052
00026e ff03      	SBRS R16,3
00026f c006      	RJMP _0x2020053
000270 81ee      	LDD  R30,Y+6
000271 81ff      	LDD  R31,Y+6+1
000272 9125      	LPM  R18,Z+
000273 83ee      	STD  Y+6,R30
000274 83ff      	STD  Y+6+1,R31
000275 c005      	RJMP _0x2020054
                 _0x2020053:
000276 81ae      	LDD  R26,Y+6
000277 81bf      	LDD  R27,Y+6+1
000278 912d      	LD   R18,X+
000279 83ae      	STD  Y+6,R26
00027a 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00027b 940e 0346 	CALL SUBOPT_0x3
00027d 3050      	CPI  R21,0
00027e f009      	BREQ _0x2020055
00027f 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000280 5031      	SUBI R19,LOW(1)
000281 cfea      	RJMP _0x2020050
                 _0x2020052:
000282 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000283 e320      	LDI  R18,LOW(48)
000284 81ee      	LDD  R30,Y+6
000285 81ff      	LDD  R31,Y+6+1
000286 940e 03b2 	CALL __GETW1PF
000288 87e8      	STD  Y+8,R30
000289 87f9      	STD  Y+8+1,R31
00028a 81ee      	LDD  R30,Y+6
00028b 81ff      	LDD  R31,Y+6+1
00028c 9632      	ADIW R30,2
00028d 83ee      	STD  Y+6,R30
00028e 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00028f 85e8      	LDD  R30,Y+8
000290 85f9      	LDD  R31,Y+8+1
000291 85aa      	LDD  R26,Y+10
000292 85bb      	LDD  R27,Y+10+1
000293 17ae      	CP   R26,R30
000294 07bf      	CPC  R27,R31
000295 f050      	BRLO _0x202005C
000296 5f2f      	SUBI R18,-LOW(1)
000297 85a8      	LDD  R26,Y+8
000298 85b9      	LDD  R27,Y+8+1
000299 85ea      	LDD  R30,Y+10
00029a 85fb      	LDD  R31,Y+10+1
00029b 1bea      	SUB  R30,R26
00029c 0bfb      	SBC  R31,R27
00029d 87ea      	STD  Y+10,R30
00029e 87fb      	STD  Y+10+1,R31
00029f cfef      	RJMP _0x202005A
                 _0x202005C:
0002a0 332a      	CPI  R18,58
0002a1 f028      	BRLO _0x202005D
0002a2 ff03      	SBRS R16,3
0002a3 c002      	RJMP _0x202005E
0002a4 5f29      	SUBI R18,-LOW(7)
0002a5 c001      	RJMP _0x202005F
                 _0x202005E:
0002a6 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002a7 fd04      	SBRC R16,4
0002a8 c01a      	RJMP _0x2020061
0002a9 3321      	CPI  R18,49
0002aa f420      	BRSH _0x2020063
0002ab 85a8      	LDD  R26,Y+8
0002ac 85b9      	LDD  R27,Y+8+1
0002ad 9711      	SBIW R26,1
0002ae f409      	BRNE _0x2020062
                 _0x2020063:
0002af c009      	RJMP _0x20200CD
                 _0x2020062:
0002b0 1753      	CP   R21,R19
0002b1 f010      	BRLO _0x2020067
0002b2 ff00      	SBRS R16,0
0002b3 c001      	RJMP _0x2020068
                 _0x2020067:
0002b4 c013      	RJMP _0x2020066
                 _0x2020068:
0002b5 e220      	LDI  R18,LOW(32)
0002b6 ff07      	SBRS R16,7
0002b7 c00b      	RJMP _0x2020069
0002b8 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002b9 6100      	ORI  R16,LOW(16)
0002ba ff02      	SBRS R16,2
0002bb c007      	RJMP _0x202006A
0002bc 7f0b      	ANDI R16,LOW(251)
0002bd 934a      	ST   -Y,R20
0002be 940e 0353 	CALL SUBOPT_0x5
0002c0 3050      	CPI  R21,0
0002c1 f009      	BREQ _0x202006B
0002c2 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002c3 940e 0346 	CALL SUBOPT_0x3
0002c5 3050      	CPI  R21,0
0002c6 f009      	BREQ _0x202006C
0002c7 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002c8 5031      	SUBI R19,LOW(1)
0002c9 85a8      	LDD  R26,Y+8
0002ca 85b9      	LDD  R27,Y+8+1
0002cb 9712      	SBIW R26,2
0002cc f008      	BRLO _0x2020059
0002cd cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002ce ff00      	SBRS R16,0
0002cf c008      	RJMP _0x202006D
                 _0x202006E:
0002d0 3050      	CPI  R21,0
0002d1 f031      	BREQ _0x2020070
0002d2 5051      	SUBI R21,LOW(1)
0002d3 e2e0      	LDI  R30,LOW(32)
0002d4 93ea      	ST   -Y,R30
0002d5 940e 0353 	CALL SUBOPT_0x5
0002d7 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002d8 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002d9 cee0      	RJMP _0x2020016
                 _0x2020018:
0002da 85ac      	LDD  R26,Y+12
0002db 85bd      	LDD  R27,Y+12+1
0002dc 940e 03ae 	CALL __GETW1P
0002de 940e 03c2 	CALL __LOADLOCR6
0002e0 9664      	ADIW R28,20
0002e1 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002e2 92ff      	PUSH R15
0002e3 2ef8      	MOV  R15,R24
0002e4 9726      	SBIW R28,6
0002e5 940e 03bd 	CALL __SAVELOCR4
0002e7 940e 036b 	CALL SUBOPT_0x8
0002e9 9730      	SBIW R30,0
0002ea f419      	BRNE _0x2020072
0002eb efef      	LDI  R30,LOW(65535)
0002ec efff      	LDI  R31,HIGH(65535)
0002ed c023      	RJMP _0x2080001
                 _0x2020072:
0002ee 01de      	MOVW R26,R28
0002ef 9616      	ADIW R26,6
0002f0 940e 037c 	CALL __ADDW2R15
0002f2 018d      	MOVW R16,R26
0002f3 940e 036b 	CALL SUBOPT_0x8
0002f5 83ee      	STD  Y+6,R30
0002f6 83ff      	STD  Y+6+1,R31
0002f7 e0e0      	LDI  R30,LOW(0)
0002f8 87e8      	STD  Y+8,R30
0002f9 87e9      	STD  Y+8+1,R30
0002fa 01de      	MOVW R26,R28
0002fb 961a      	ADIW R26,10
0002fc 940e 037c 	CALL __ADDW2R15
0002fe 940e 03ae 	CALL __GETW1P
000300 93fa      	ST   -Y,R31
000301 93ea      	ST   -Y,R30
000302 931a      	ST   -Y,R17
000303 930a      	ST   -Y,R16
000304 e6ee      	LDI  R30,LOW(_put_buff_G101)
000305 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000306 93fa      	ST   -Y,R31
000307 93ea      	ST   -Y,R30
000308 01de      	MOVW R26,R28
000309 961a      	ADIW R26,10
00030a dea3      	RCALL __print_G101
00030b 019f      	MOVW R18,R30
00030c 81ae      	LDD  R26,Y+6
00030d 81bf      	LDD  R27,Y+6+1
00030e e0e0      	LDI  R30,LOW(0)
00030f 93ec      	ST   X,R30
000310 01f9      	MOVW R30,R18
                 _0x2080001:
000311 940e 03c4 	CALL __LOADLOCR4
000313 962a      	ADIW R28,10
000314 90ff      	POP  R15
000315 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000316 93ba      	ST   -Y,R27
000317 93aa      	ST   -Y,R26
000318 91a9          ld   r26,y+
000319 91b9          ld   r27,y+
00031a 27ee          clr  r30
00031b 27ff          clr  r31
                 strlen0:
00031c 916d          ld   r22,x+
00031d 2366          tst  r22
00031e f011          breq strlen1
00031f 9631          adiw r30,1
000320 cffb          rjmp strlen0
                 strlen1:
000321 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000322 93ba      	ST   -Y,R27
000323 93aa      	ST   -Y,R26
000324 27aa          clr  r26
000325 27bb          clr  r27
000326 91e9          ld   r30,y+
000327 91f9          ld   r31,y+
                 strlenf0:
000328 9005      	lpm  r0,z+
000329 2000          tst  r0
00032a f011          breq strlenf1
00032b 9611          adiw r26,1
00032c cffb          rjmp strlenf0
                 strlenf1:
00032d 01fd          movw r30,r26
00032e 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _frequency:
00016e           	.BYTE 0x10
                 _freq:
00017e           	.BYTE 0x4
                 __base_y_G100:
000182           	.BYTE 0x4
                 __lcd_maxx:
000186           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00032f b5e7      	IN   R30,0x27
000330 2ffe      	MOV  R31,R30
000331 e0e0      	LDI  R30,0
000332 01df      	MOVW R26,R30
000333 b5e6      	IN   R30,0x26
000334 e0f0      	LDI  R31,0
000335 0fea      	ADD  R30,R26
000336 1ffb      	ADC  R31,R27
000337 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000338 940e 00f2 	CALL __lcd_write_data
00033a e0a3      	LDI  R26,LOW(3)
00033b e0b0      	LDI  R27,0
00033c 940c 0372 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00033e e3a0      	LDI  R26,LOW(48)
00033f 940e 00de 	CALL __lcd_write_nibble_G100
                +
000341 e28c     +LDI R24 , LOW ( 300 )
000342 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
000343 9701     +SBIW R24 , 1
000344 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
000345 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
000346 932a      	ST   -Y,R18
000347 85ad      	LDD  R26,Y+13
000348 85be      	LDD  R27,Y+13+1
000349 85ef      	LDD  R30,Y+15
00034a 89f8      	LDD  R31,Y+15+1
00034b 9509      	ICALL
00034c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
00034d 89e8      	LDD  R30,Y+16
00034e 89f9      	LDD  R31,Y+16+1
00034f 9734      	SBIW R30,4
000350 8be8      	STD  Y+16,R30
000351 8bf9      	STD  Y+16+1,R31
000352 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000353 85ad      	LDD  R26,Y+13
000354 85be      	LDD  R27,Y+13+1
000355 85ef      	LDD  R30,Y+15
000356 89f8      	LDD  R31,Y+15+1
000357 9509      	ICALL
000358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000359 89a8      	LDD  R26,Y+16
00035a 89b9      	LDD  R27,Y+16+1
00035b 9614      	ADIW R26,4
00035c 940e 03ae 	CALL __GETW1P
00035e 83ee      	STD  Y+6,R30
00035f 83ff      	STD  Y+6+1,R31
000360 81ae      	LDD  R26,Y+6
000361 81bf      	LDD  R27,Y+6+1
000362 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000363 89a8      	LDD  R26,Y+16
000364 89b9      	LDD  R27,Y+16+1
000365 9614      	ADIW R26,4
000366 940e 03ae 	CALL __GETW1P
000368 87ea      	STD  Y+10,R30
000369 87fb      	STD  Y+10+1,R31
00036a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00036b 01de      	MOVW R26,R28
00036c 961c      	ADIW R26,12
00036d 940e 037c 	CALL __ADDW2R15
00036f 940e 03ae 	CALL __GETW1P
000371 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000372 9610      	adiw r26,0
000373 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000374 eb88     +LDI R24 , LOW ( 0xBB8 )
000375 e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
000376 9701     +SBIW R24 , 1
000377 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
000378 95a8      	wdr
000379 9711      	sbiw r26,1
00037a f7c9      	brne __delay_ms0
                 __delay_ms1:
00037b 9508      	ret
                 
                 __ADDW2R15:
00037c 2400      	CLR  R0
00037d 0daf      	ADD  R26,R15
00037e 1db0      	ADC  R27,R0
00037f 9508      	RET
                 
                 __ANEGW1:
000380 95f1      	NEG  R31
000381 95e1      	NEG  R30
000382 40f0      	SBCI R31,0
000383 9508      	RET
                 
                 __CWD1:
000384 2f6f      	MOV  R22,R31
000385 0f66      	ADD  R22,R22
000386 0b66      	SBC  R22,R22
000387 2f76      	MOV  R23,R22
000388 9508      	RET
                 
                 __DIVD21U:
000389 933f      	PUSH R19
00038a 934f      	PUSH R20
00038b 935f      	PUSH R21
00038c 2400      	CLR  R0
00038d 2411      	CLR  R1
00038e 2744      	CLR  R20
00038f 2755      	CLR  R21
000390 e230      	LDI  R19,32
                 __DIVD21U1:
000391 0faa      	LSL  R26
000392 1fbb      	ROL  R27
000393 1f88      	ROL  R24
000394 1f99      	ROL  R25
000395 1c00      	ROL  R0
000396 1c11      	ROL  R1
000397 1f44      	ROL  R20
000398 1f55      	ROL  R21
000399 1a0e      	SUB  R0,R30
00039a 0a1f      	SBC  R1,R31
00039b 0b46      	SBC  R20,R22
00039c 0b57      	SBC  R21,R23
00039d f428      	BRCC __DIVD21U2
00039e 0e0e      	ADD  R0,R30
00039f 1e1f      	ADC  R1,R31
0003a0 1f46      	ADC  R20,R22
0003a1 1f57      	ADC  R21,R23
0003a2 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003a3 60a1      	SBR  R26,1
                 __DIVD21U3:
0003a4 953a      	DEC  R19
0003a5 f759      	BRNE __DIVD21U1
0003a6 01fd      	MOVW R30,R26
0003a7 01bc      	MOVW R22,R24
0003a8 01d0      	MOVW R26,R0
0003a9 01ca      	MOVW R24,R20
0003aa 915f      	POP  R21
0003ab 914f      	POP  R20
0003ac 913f      	POP  R19
0003ad 9508      	RET
                 
                 __GETW1P:
0003ae 91ed      	LD   R30,X+
0003af 91fc      	LD   R31,X
0003b0 9711      	SBIW R26,1
0003b1 9508      	RET
                 
                 __GETW1PF:
0003b2 9005      	LPM  R0,Z+
0003b3 91f4      	LPM  R31,Z
0003b4 2de0      	MOV  R30,R0
0003b5 9508      	RET
                 
                 __PUTPARD1:
0003b6 937a      	ST   -Y,R23
0003b7 936a      	ST   -Y,R22
0003b8 93fa      	ST   -Y,R31
0003b9 93ea      	ST   -Y,R30
0003ba 9508      	RET
                 
                 __SAVELOCR6:
0003bb 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003bc 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003bd 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003be 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003bf 931a      	ST   -Y,R17
0003c0 930a      	ST   -Y,R16
0003c1 9508      	RET
                 
                 __LOADLOCR6:
0003c2 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003c3 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003c4 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003c5 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003c6 8119      	LDD  R17,Y+1
0003c7 8108      	LD   R16,Y
0003c8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  16 r1 :   5 r2 :   0 r3 :   0 r4 :   3 r5 :   2 r6 :   1 r7 :   0 
r8 :   3 r9 :   1 r10:   1 r11:   0 r12:   4 r13:   4 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:  12 r20:  16 r21:  23 r22:  16 r23:   6 
r24:  27 r25:   7 r26: 105 r27:  42 r28:  14 r29:   1 r30: 194 r31:  68 
x  :  23 y  : 164 z  :  15 
Registers used: 30 out of 35 (85.7%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   6 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  31 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  54 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   3 cpi   :  33 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   2 jmp   :  23 ld    :  25 ldd   :  76 ldi   : 107 
lds   :   3 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  20 movw  :  24 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  21 pop   :   4 push  :   4 rcall :  18 ret   :  27 
reti  :   0 rjmp  :  63 rol   :   7 ror   :   0 sbc   :   6 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   1 sbrc  :   2 
sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  58 std   :  31 sts   :   7 sub   :   3 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 57 out of 116 (49.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000792   1872     66   1938   16384  11.8%
[.dseg] 0x000060 0x000187      0     39     39    1024   3.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 11 warnings
