;/*******************************************************
;Project : LCDsExp2
;Version : 1.00
;Date    : 1/2/2021
;Author  : Alireza Majari
;Company : P48
;Comments:
;This is Assignment#3 Experiment#3 of Microprocessor Lab.
;kharazmi University of Tehran
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 12.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;
;int delay;
;int cursorX;
;int cursorY;
;char *alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

	.DSEG
_0x3:
	.BYTE 0x1B
;int index;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001F    ++delay;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0020 
; 0000 0021    if(delay ==500){
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0022         lcd_putchar(alphabet[index]);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0023         index+=1;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0024         cursorX+=1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0025 
; 0000 0026         if(cursorX==20){
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0027             cursorX=0;
;PCODE: $00000022 VOL: 0
; 0000 0028             cursorY=1;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0029          }
; 0000 002A 
; 0000 002B         lcd_gotoxy(cursorX,cursorY);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002C         delay=0;
;PCODE: $00000029 VOL: 0
; 0000 002D 
; 0000 002E         if(index == 26){
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002F             index = 0;
;PCODE: $0000002D VOL: 0
; 0000 0030             cursorX = 0;
;PCODE: $0000002E VOL: 0
; 0000 0031             cursorY = 0;
;PCODE: $0000002F VOL: 0
; 0000 0032             lcd_clear();
;PCODE: $00000030 VOL: 0
; 0000 0033         }
; 0000 0034    }
;PCODE: $00000031 VOL: 0
; 0000 0035 }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;
;void main(void)
; 0000 0038 {
;PCODE: $00000036 VOL: 0
; 0000 0039     DDRC=0xff;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 003A     PORTC=0xff;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003B 
; 0000 003C     index = 0;
;PCODE: $0000003B VOL: 0
; 0000 003D     cursorX = 0;
;PCODE: $0000003C VOL: 0
; 0000 003E     cursorY = 0;
;PCODE: $0000003D VOL: 0
; 0000 003F     delay = 0;
;PCODE: $0000003E VOL: 0
; 0000 0040 
; 0000 0041     lcd_init(20);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0042 
; 0000 0043     TCCR0=0x01;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0044     TCNT0=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0045     OCR0=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0046     TIMSK=0x01;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0047     #asm("sei")
;PCODE: $00000049 VOL: 0
	sei
;PCODE: $0000004A VOL: 0
; 0000 0048 
; 0000 0049     while (1) {
;PCODE: $0000004B VOL: 0
; 0000 004A 
; 0000 004B     }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004C }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
